buildscript {
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.2.3'
        classpath 'io.fabric.tools:gradle:1.19.1'
        classpath 'com.stanfy.spoon:spoon-gradle-plugin:1.0.2'
        classpath 'com.github.stephanenicolas.ormgap:ormgap-plugin:1.0.11'
    }
}


apply plugin: 'com.android.application'
apply plugin: 'spoon'
apply plugin: 'io.fabric'
apply plugin: 'ormgap'

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        applicationId "com.seguetech.zippy"
        minSdkVersion 14
        targetSdkVersion 22
        // Fetch the version according to git latest tag and "how far are we from last tag"
        def longVersionName = "git -C ${rootDir} describe --tags --long".execute().text.trim()
        def (fullVersionTag, versionBuild, gitSha) = longVersionName.tokenize('-')
        def(versionMajor, versionMinor, versionPatch) = fullVersionTag.tokenize('.')

        // Set the version name
        versionName "$versionMajor.$versionMinor.$versionPatch-$versionBuild"

        // Turn the version name into a version code
        versionCode versionMajor.toInteger() * 100000 +
                versionMinor.toInteger() * 10000 +
                versionPatch.toInteger() * 1000 +
                versionBuild.toInteger()

        // Friendly print the version output to the Gradle console
        printf("\n--------" + "VERSION DATA--------" + "\n" + "- CODE: " + versionCode + "\n" +
                "- NAME: " + versionName + "\n----------------------------\n")

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        manifestPlaceholders = [ crashlyticsApiKey:ZIPPY_FABRIC_API_KEY ]
    }

    buildTypes {

        debug {
            debuggable true
            applicationIdSuffix '.debug'
            buildConfigField 'String', 'OPENFDA_API_KEY', ZIPPY_OPENFDA_API_KEY
            ext.betaDistributionGroupAliases="zippytesters"
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'OPENFDA_API_KEY', ZIPPY_OPENFDA_API_KEY
        }

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/NOTICE'
    }

}

spoon {
    debug = true
    noAnimations = true
}

repositories {
    jcenter()
    maven { url 'https://maven.fabric.io/public' }
    maven {
        url "https://jitpack.io"
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:22.2.0'
    compile 'com.android.support:design:22.2.0'
    compile 'com.android.support:recyclerview-v7:22.2.0'
    compile 'com.android.support:cardview-v7:22.2.0'

    compile 'com.avast:android-styled-dialogs:2.2.0'
    compile 'com.afollestad:material-dialogs:0.7.6.0'

    provided 'com.squareup.dagger:dagger-compiler:1.2.2'
    compile 'com.squareup.dagger:dagger:1.2.2'
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.jakewharton.timber:timber:3.1.0'
    compile 'com.facebook.stetho:stetho:1.1.1'
    compile 'com.facebook.stetho:stetho-okhttp:1.1.1'
    compile 'de.greenrobot:eventbus:2.4.0'
    compile 'com.squareup.okhttp:okhttp:2.4.0'

    compile 'fr.avianey.com.viewpagerindicator:library:2.4.1@aar'

    compile 'com.j256.ormlite:ormlite-android:4.48'
    compile('org.simpleframework:simple-xml:2.7.1') {
        exclude module: 'stax'
        exclude module: 'stax-api'
        exclude module: 'xpp3'
    }

    compile('com.crashlytics.sdk.android:crashlytics:2.3.2@aar') {
        transitive = true;
    }

    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'

    androidTestCompile 'com.android.support.test.espresso:espresso-intents:2.2'
    androidTestCompile 'com.android.support.test:runner:0.3'
    androidTestCompile 'com.android.support.test:rules:0.3'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2'
    androidTestCompile 'com.squareup.spoon:spoon-client:1.1.9'

}

afterEvaluate {
    initFabricPropertiesIfNeeded()
}

def initFabricPropertiesIfNeeded() {
    def propertiesFile = file('fabric.properties')
    if (!propertiesFile.exists()) {
        def commentMessage = "This is an autogenerated properties from the system environment to prevent keys being committed to source control."
        ant.propertyfile(file:"fabric.properties", comment: commentMessage) {
            entry(key:"apiSecret", value:ZIPPY_FABRIC_BUILD_SECRET)
            entry(key:"apiKey", value:ZIPPY_FABRIC_API_KEY)
        }
    }
}

